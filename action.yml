name: 'Action for auditing Trivy scan results'
description: 'This action automatically creates audit records for Trivy scan results'
author: 'Fatih Tokus'
inputs:
  scan-results-file:
    description: 'Where to find scan result json file'
    required: true
    default: 'results.json'
  auditing-folder-path:
    description: 'Which folder to store auditing results'
    required: true
    default: 'auditing'
  auditing-branch:
    description: 'Which branch to store auditing results'
    required: true
    default: 'auditing'
runs:
  using: "composite"
  steps:
    - run: echo Hello ${{ inputs.who-to-greet }}.
      shell: bash
    - id: random-number-generator
      run: echo "random-number=$(echo $RANDOM)" >> $GITHUB_OUTPUT
      shell: bash
    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash
    - id: parameters
      shell: bash
      run: |
        SCAN_RESULT_FOLDER="auditing/scan-results"
        echo "SCAN_RESULT_FOLDER=$SCAN_RESULT_FOLDER" >> $GITHUB_OUTPUT
        EVENT_FOLDER="auditing/events"
        echo "EVENT_FOLDER=$EVENT_FOLDER" >> $GITHUB_OUTPUT
        AUDITING_ITEM="auditing/auditing_item.json"
        echo "AUDITING_ITEM=$AUDITING_ITEM" >> $GITHUB_OUTPUT
        TEMP_AUDIT_FILE="auditing/temp_auditing.json"
        echo "TEMP_AUDIT_FILE=$TEMP_AUDIT_FILE" >> $GITHUB_OUTPUT
        AUDIT_FILE="gh-pages/auditing/auditing.json"
        echo "AUDIT_FILE=$AUDIT_FILE" >> $GITHUB_OUTPUT      
        ACTION_START_TIME=$(date +%s)
        echo "ACTION_START_TIME=$ACTION_START_TIME" >> $GITHUB_OUTPUT
        SCAN_RESULT="$SCAN_RESULT_FOLDER/result-$ACTION_START_TIME.json"
        echo "SCAN_RESULT=$SCAN_RESULT" >> $GITHUB_OUTPUT
        EVENT_DETAIL="$event_folder/event-$ACTION_START_TIME.json"
        echo "EVENT_DETAIL=$EVENT_DETAIL" >> $GITHUB_OUTPUT
    - name: Creating auditing folders
      shell: bash
      run: |
        mkdir -p ${{steps.parameters.outputs.SCAN_RESULT_FOLDER}}
        echo "${{steps.parameters.outputs.SCAN_RESULT_FOLDER}} has been created!"
        mkdir -p ${{steps.parameters.outputs.EVENT_FOLDER}}
        echo "${{steps.parameters.outputs.EVENT_FOLDER}} has been created!"
    - name: Storing scan results
      shell: bash
      run: |
        cat "${{ inputs.scan-results-file }}" >>"${{steps.parameters.outputs.SCAN_RESULT}}"
        echo "${{steps.parameters.outputs.SCAN_RESULT}} has been created!"
    - name: Storing event details
      id: store_event_details
      shell: bash
      run: |
        cat ${{ github.event_path }}>>"${{steps.parameters.outputs.EVENT_DETAIL}}"    
        echo "${{steps.parameters.outputs.EVENT_DETAIL}} has been created!"
    - name: Creating Scan Details
      shell: bash
      run: |
        cat 
        {
           echo '{'
           echo '"Id": "${{steps.parameters.outputs.ACTION_START_TIME}}",'
           echo '"Url": "${{steps.parameters.outputs.SCAN_RESULT}}",'
           echo '"Sha": "${{ github.sha }}",'
           echo '"Initiator": "${{ github.triggering_actor }}",'
           echo '"Ref": "${{ github.ref }}",'
           echo '"Event_Name": "${{ github.event_name }}",'
           echo '"Event_Path": "${{ steps.parameters.outputs.EVENT_DETAIL }}"'
           echo '},'
         }  >>"$auditing_item"
        
         echo "$auditing_item has been created!"
    - name: Checkout folder "${{ inputs.auditing-folder-path }}" on branch "${{ inputs.auditing-branch }}" 🛎️
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.auditing-branch }}
        path: ${{ inputs.auditing-folder-path }}
    - name: Adding Scan Details to Audit db
      shell: bash
      run: |
        audit_file_content="abc.json"
        if [ -f $audit_file ]; then
           echo "$audit_file does exist!"
           cat "$audit_file" >>"$audit_file_content"
        fi
        if [ ! -f $audit_file ]; then
           echo "$audit_file doesn't exist, creating an empty one!"
           cat 
            {
             echo '{'
             echo '"Pushes" : ['
             echo ']}'
        
           }  >>"$audit_file_content"
        fi
        
        # copy audit file except the last line which is '}' character of json 
        head -n -1 "$audit_file_content" > "$temp_audit_file"
        cat "$auditing_item" >>"$temp_audit_file"
        cat 
        {
           echo ''
           echo ']}'
         } >>"$temp_audit_file"
        echo "$temp_audit_file has been created!"
        # remove tmp
        rm -f $auditing_item
    - name: Deploy folder "${{ inputs.auditing-folder-path }}" to branch "${{ inputs.auditing-branch }}" 🚀
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: ${{ inputs.auditing-folder-path }}
        clean: false
branding:
  icon: "git-pull-request"
  color: "purple"
